---
- name: Initialize IaC (OpenTofu/Terraform) User on Proxmox 9
  hosts: all
  gather_facts: false
  become: true
  vars_files:
    - vars/main.yaml
    - vars/vault.yaml

  tasks:
    - name: Check if Role exists
      ansible.builtin.command: pveum role list
      register: role_list
      changed_when: false

    - name: Create Role
      ansible.builtin.command: >
        pveum role add {{ iac_role }} -privs "{{ proxmox_privileges }}"
      when: iac_role not in role_list.stdout
      register: role_created

    - name: Update Role if it exists
      ansible.builtin.command: >
        pveum role modify {{ iac_role }} -privs "{{ proxmox_privileges }}"
      when: iac_role in role_list.stdout

    - name: Check if User exists
      ansible.builtin.command: pveum user list
      register: user_list
      changed_when: false

    - name: Create User
      ansible.builtin.command: >
        pveum user add {{ iac_user }} --password {{ iac_user_password }}
      when: iac_user not in user_list.stdout
      no_log: true

    - name: Apply ACL for User
      ansible.builtin.command: >
        pveum aclmod / -user {{ iac_user }} -role {{ iac_role }}
      register: acl_result
      changed_when: "'200 OK' in acl_result.stderr or acl_result.rc == 0"

    - name: Create API token for User
      ansible.builtin.command: >
        pveum user token add {{ iac_user }} {{ iac_token_name }}
      register: token_output
      changed_when: token_output.rc == 0
      failed_when:
        - token_output.rc != 0
        - "'already exists' not in token_output.stderr"

    - name: Extract token secret from output
      ansible.builtin.set_fact:
        token_secret: "{{ token_output.stdout | regex_search('│ value\\s+│\\s+([a-f0-9-]+)\\s+│', '\\1') | first | default('') }}"
      when:
        - token_output.rc == 0
        - token_output.stdout is defined

    - name: Display API token information
      ansible.builtin.debug:
        msg:
          - "===================================================="
          - "IMPORTANT: Save these credentials securely!"
          - "===================================================="
          - ""
          - "API Token ID: {{ iac_user }}!{{ iac_token_name }}"
          - "API Token Secret: {{ token_secret if token_secret else 'Token already exists - check Proxmox UI or delete and recreate' }}"
          - ""
          - "Export these as environment variables:"
          - "export PM_API_TOKEN_ID='{{ iac_user }}!{{ iac_token_name }}'"
          - 'export PM_API_TOKEN_SECRET="{{ token_secret if token_secret else ''<get_from_proxmox_ui>'' }}"'
          - ""
          - "===================================================="
      when: token_output.rc == 0

    - name: Verify user and role configuration
      ansible.builtin.command: pveum user list
      register: final_verification
      changed_when: false

    - name: Show verification results
      ansible.builtin.debug:
        msg: "User {{ iac_user }} has been successfully configured with role {{ iac_role }}"
      when: iac_user in final_verification.stdout
